function EI_pipeline_Chao_nonloc(sbj_name,project_name,block_names,dirs,datatype,freq_band,Nu,Lamda,Eta,EI_window)
%% INPUTS
%   sbj_name:               subject name
%   project_name:           name of task
%   block_names:                     names of blocks to be analyed (cell of strings)
%   dirs:                   directories pointing to files of interest (generated by InitializeDirs)


for bi = 1%:length(block_names)
    bn = block_names{bi};
    
    %% Load globalVar
    load([dirs.original_data filesep sbj_name filesep 'global_' project_name '_' sbj_name '_' bn '.mat'])
    
    gray_idx = true(length(globalVar.channame_BR),1);
    
    if strcmp(datatype,'Band')
        data_root=globalVar.BandData;
    else
        data_root=globalVar.SpecData;
    end
    
    time_series = 0:1/globalVar.iEEG_rate:(1/globalVar.iEEG_rate)*(globalVar.chanLength-1);
    
    if ~isempty(EI_window)
        EEG_win = dsearchn(time_series',EI_window');
        ER_win  = dsearchn(globalVar.ER_series',EI_window');
        globalVar.chanLength = EEG_win(end)-EEG_win(1)+1;
        globalVar.ER_length = ER_win(end)-ER_win(1)+1;
        time_series = time_series(EEG_win(1):EEG_win(end));
        globalVar.ER_series = globalVar.ER_series(ER_win(1):ER_win(end));
    else
        EI_window = zeros(1,2);
        EI_window(1) = round(globalVar.ER_series(1));
        EI_window(2) = round(globalVar.ER_series(end));
        EEG_win = dsearchn(time_series',EI_window');
        ER_win  = dsearchn(globalVar.ER_series',EI_window');
        globalVar.chanLength = EEG_win(end)-EEG_win(1)+1;
        globalVar.ER_length = ER_win(end)-ER_win(1)+1;
        time_series = time_series(EEG_win(1):EEG_win(end));
        globalVar.ER_series = globalVar.ER_series(ER_win(1):ER_win(end));
    end
    
    %data initialization
    BR_matrix = zeros(length(globalVar.channame_BR(gray_idx)),globalVar.chanLength);
    ER_matrix = zeros(length(globalVar.channame_BR(gray_idx)),globalVar.ER_length);
    
    
    for i = 1:length(globalVar.channame_BR(gray_idx))
        channame_idx = find(gray_idx,i);
        el = channame_idx(end);
        %load ER
        fn_out = sprintf('%s%s%s%s%s%s%s%siEEG%s_%.2d.mat',globalVar.([datatype,'Data']),freq_band,filesep,sbj_name,filesep,bn,filesep,freq_band,bn,el);
        load(fn_out);
        BR_matrix(i,:) = data.wave(EEG_win(1):EEG_win(end));
        ER_matrix(i,:) = data.ER(ER_win(1):ER_win(end));
    end
    
    ER_step = globalVar.ER_series(2) - globalVar.ER_series(1);
    
    %Nu = 1;%%%%
    
    %Lamda = 400;%%%%%
    %channel sellection
    %decimate shoud be 250Hz
    
    ER_n = zeros(size(ER_matrix));
    UN_temp = zeros(size(ER_matrix));
    UN = zeros(size(ER_matrix));
    u_N = zeros(size(ER_matrix));
    
    for i = 1:length(ER_matrix)
        ER_n(:,i) = mean(ER_matrix(:,1:i),2);
    end
    
    %     for i = 1:length(ER_matrix)
    %         UN_temp(:,i) = ER_matrix(:,i) - ER_n(:,i)-Nu;
    %         UN(:,i) = sum(UN_temp(:,1:i),2);    for i = 1:length(ER_matrix)
    
    %     end
    for i = 1:length(ER_matrix)
        UN_temp(:,i) = ER_matrix(:,i) - ER_n(:,i)-Nu;
    end
    
    
    for i = 1:length(ER_matrix)
        UN(:,i) = sum(UN_temp(:,1:i),2);
    end
    
    for i = 1:length(ER_matrix)
        u_N(:,i ) = min(UN(:,1:i),[],2);
    end
    
    N_a = cell(length(globalVar.channame_BR(gray_idx)),1);%alarm time
    N_d = cell(length(globalVar.channame_BR(gray_idx)),1);%detection time
    
    for i = 1:length(N_a)
        N_a{i,1} = find((UN(i,:) - u_N(i,:)) >= Lamda,1);
        if isempty(N_a{i,1})
            N_a{i,1} = globalVar.ER_length - 1;
            N_d{i,1} = globalVar.ER_length - 1;
        else
            N_d{i,1} = find(u_N(i,:) == u_N(i,N_a{i,1}),1);
        end
    end
    
    
    
    %      = reshape(normalize(reshape(ER_matrix,1,[]),'range'),length(globalVar.channame_BR),[]);
    ER_matrix_norm = normalize(ER_matrix,2,'range');
    
    
    amp = 1;
    % pattern selection?
    %% Plot bad channels
    figureDim = [1 1 1 1];%[0 0 .5 .5]
    figure('units', 'normalized', 'outerposition', figureDim)
    hold on
    
    BR_matrix_plot = bsxfun(@plus, zscore(BR_matrix,0,2)*amp, [0:-5:-5*(length(globalVar.channame_BR(gray_idx))-1)]');
    
    x_channame = zeros(1,length(globalVar.channame_BR(gray_idx)));
    
    y_axis = (length(globalVar.channame_BR(gray_idx))-1)*-5 :5 :0;
    
    y_axis_all = length(globalVar.channame_BR(gray_idx))*-5 :5 :5;
    
    
    ER_plot = contourf(globalVar.ER_series,y_axis_all,flip([zeros(1,length(globalVar.ER_series));ER_matrix;zeros(1,length(globalVar.ER_series))]),100,'linecolor','none');
    set(gca,'clim',[0 25]) %ER plot
    BR_plot = plot(time_series,BR_matrix_plot,'k');%iEEG_plot
    
    for i = 1:length(globalVar.channame_BR(gray_idx))
        N_a_plot = plot(globalVar.ER_series,repmat(0-5*(i-1),1,globalVar.ER_length),'y','LineStyle', 'none' ,'Marker','x','MarkerSize', 12,'LineWidth',2,'MarkerIndices',N_a{i});
    end
    
    for i = 1:length(globalVar.channame_BR(gray_idx))
        N_d_plot = plot(globalVar.ER_series,repmat(0-5*(i-1),1,globalVar.ER_length),'y','LineStyle', 'none' ,'Marker','s','MarkerSize', 12,'LineWidth',2,'MarkerIndices',N_d{i});
    end
    
    
    % plot(x_channame,y_axis,'--');%channame
    
    channame_BR_id = arrayfun(@num2str,(1:length(globalVar.channame_BR)),'UniformOutput',0);
    
    space_connect   = cell(1, length(globalVar.channame_BR));
    space_connect(:) = {'   '};
    
    EI_y_label = strcat(globalVar.channame_BR,space_connect,channame_BR_id);
    EI_y_label = EI_y_label(gray_idx);
    EI_y_label = flip(EI_y_label);
    
    set(gca,'ytick',y_axis,'yticklabel',EI_y_label);
    
    %     ylim([-5 length(globalVar.channame_BR)*5+5])
    ylim([length(globalVar.channame_BR(gray_idx))*-5 5])
    %     xlim([0 length(BR_matrix)])
    xlim([0,round(globalVar.ER_series(end))])
    
    
    if ~isempty(EI_window)
        xlim(EI_window)
    else
        xlim([0,round(globalVar.ER_series(end))])
    end
    
    
    
    title(['iEEG raw ',bn])
    xlabel('Time (s)')
    ylabel('Electrode name (BR)')
    
    %% identify the bad channel mannuly
    
    
    [bad_chan] = promptBadChanSpec;
    select_idx = false(length(globalVar.channame_BR),1);
    select_idx(bad_chan) = true;
    gray_idx = select_idx;
    %% plot again
    close all
    
    %data initialization
    BR_matrix = zeros(length(globalVar.channame_BR(gray_idx)),globalVar.chanLength);
    ER_matrix = zeros(length(globalVar.channame_BR(gray_idx)),globalVar.ER_length);
    
    
    for i = 1:length(globalVar.channame_BR(gray_idx))
        channame_idx = find(gray_idx,i);
        el = channame_idx(end);
        %load ER
        fn_out = sprintf('%s%s%s%s%s%s%s%siEEG%s_%.2d.mat',globalVar.([datatype,'Data']),freq_band,filesep,sbj_name,filesep,bn,filesep,freq_band,bn,el);
        load(fn_out);
        if ~isempty(EI_window)
            BR_matrix(i,:) = data.wave(EEG_win(1):EEG_win(end));
            ER_matrix(i,:) = data.ER(ER_win(1):ER_win(end));
        else
            BR_matrix(i,:) = data.wave;
            ER_matrix(i,:) = data.ER;
        end
    end
    
    ER_step = globalVar.ER_series(2) - globalVar.ER_series(1);
    
    %Nu = 1;%%%%
    
    %Lamda = 400;%%%%%
    %channel sellection
    %decimate shoud be 250Hz
    
    ER_n = zeros(size(ER_matrix));
    UN_temp = zeros(size(ER_matrix));
    UN = zeros(size(ER_matrix));
    u_N = zeros(size(ER_matrix));
    
    for i = 1:length(ER_matrix)
        ER_n(:,i) = mean(ER_matrix(:,1:i),2);
    end
    
    %     for i = 1:length(ER_matrix)
    %         UN_temp(:,i) = ER_matrix(:,i) - ER_n(:,i)-Nu;
    %         UN(:,i) = sum(UN_temp(:,1:i),2);
    %     end
    for i = 1:length(ER_matrix)
        UN_temp(:,i) = ER_matrix(:,i) - ER_n(:,i)-Nu;
    end
    
    
    for i = 1:length(ER_matrix)
        UN(:,i) = sum(UN_temp(:,1:i),2);
    end
    
    for i = 1:length(ER_matrix)
        u_N(:,i ) = min(UN(:,1:i),[],2);
    end
    
    N_a = cell(length(globalVar.channame_BR(gray_idx)),1);%alarm time
    N_d = cell(length(globalVar.channame_BR(gray_idx)),1);%detection time
    
    for i = 1:length(N_a)
        N_a{i,1} = find((UN(i,:) - u_N(i,:)) >= Lamda,1);
        if isempty(N_a{i,1})
            N_a{i,1} = globalVar.ER_length - 1;
            N_d{i,1} = globalVar.ER_length - 1;
        else
            N_d{i,1} = find(u_N(i,:) == u_N(i,N_a{i,1}),1);
        end
    end
    
    
    figureDim = [1 1 1 1];%[0 0 .5 .5]
    figure('units', 'normalized', 'outerposition', figureDim)
    hold on
    
    BR_matrix_plot = bsxfun(@plus, zscore(BR_matrix,0,2)*amp, [0:-5:-5*(length(globalVar.channame_BR(gray_idx))-1)]');
    
    x_channame = zeros(1,length(globalVar.channame_BR(gray_idx)));
    
    y_axis = (length(globalVar.channame_BR(gray_idx))-1)*-5 :5 :0;
    
    y_axis_all = length(globalVar.channame_BR(gray_idx))*-5 :5 :5;
    
    
    ER_plot = contourf(globalVar.ER_series,y_axis_all,flip([zeros(1,length(globalVar.ER_series));ER_matrix;zeros(1,length(globalVar.ER_series))]),100,'linecolor','none');
    set(gca,'clim',[0 25]) %ER plot
    BR_plot = plot(time_series,BR_matrix_plot,'k');%iEEG_plot
    
    for i = 1:length(globalVar.channame_BR(gray_idx))
        N_a_plot = plot(globalVar.ER_series,repmat(0-5*(i-1),1,globalVar.ER_length),'y','LineStyle', 'none' ,'Marker','x','MarkerSize', 12,'LineWidth',2,'MarkerIndices',N_a{i});
    end
    
    for i = 1:length(globalVar.channame_BR(gray_idx))
        N_d_plot = plot(globalVar.ER_series,repmat(0-5*(i-1),1,globalVar.ER_length),'y','LineStyle', 'none' ,'Marker','s','MarkerSize', 12,'LineWidth',2,'MarkerIndices',N_d{i});
    end
    
    
    % plot(x_channame,y_axis,'--');%channame
    
    channame_BR_id = arrayfun(@num2str,(1:length(globalVar.channame_BR)),'UniformOutput',0);
    
    space_connect   = cell(1, length(globalVar.channame_BR));
    space_connect(:) = {'   '};
    
    EI_y_label = strcat(globalVar.channame_BR,space_connect,channame_BR_id);
    EI_y_label = EI_y_label(gray_idx);
    EI_y_label = flip(EI_y_label);
    
    set(gca,'ytick',y_axis,'yticklabel',EI_y_label);
    
    %     ylim([-5 length(globalVar.channame_BR)*5+5])
    ylim([length(globalVar.channame_BR(gray_idx))*-5 5])
    %     xlim([0 length(BR_matrix)])
    xlim([0,round(globalVar.ER_series(end))])
    
    
    if ~isempty(EI_window)
        xlim(EI_window)
    else
        xlim([0,round(globalVar.ER_series(end))])
    end
    
    
    
    title(['iEEG raw ',bn])
    xlabel('Time (s)')
    ylabel('Electrode name (BR)')
    
    %% calculate the EI index
    N_0 = min([N_d{:}]);
    
    EI = cell(length(globalVar.channame_BR(gray_idx)),1);
    EI_index = cell(length(globalVar.channame_BR(gray_idx)),1);
    
    N_d_time = cell(length(globalVar.channame_BR(gray_idx)),1);
    N_d_time_index = cell(length(globalVar.channame_BR(gray_idx)),1);
    
    N_d_ER = cell(length(globalVar.channame_BR(gray_idx)),1);
    N_d_ER_index = cell(length(globalVar.channame_BR(gray_idx)),1);
    
    for i = 1:length(globalVar.channame_BR(gray_idx))
        if N_d{i,1}==globalVar.ER_length - 1
            EI{i,1} = nan;
            N_d_time{i,1} = nan;
            N_d_ER{i,1} = nan;
        else
            if globalVar.ER_series(N_d{i,1}) <= round(globalVar.ER_series(end)) - Eta
                EI{i,1} = (1/(globalVar.ER_series(N_d{i,1})-globalVar.ER_series(N_0)+1))*sum(ER_matrix(i,N_d{i,1}:(N_d{i,1}+round(Eta/ER_step))));
                N_d_time{i,1} = globalVar.ER_series(N_d{i,1})-globalVar.ER_series(N_0);
                N_d_ER{i,1} = sum(ER_matrix(i,N_d{i,1}:(N_d{i,1}+round(Eta/ER_step))));
            else
                %                 EI{i,1} = 1/(globalVar.ER_series(N_d{i,1})-globalVar.ER_series(N_0)+1);
                EI{i,1} = nan;
                N_d_time{i,1} = nan;
                N_d_ER{i,1} = nan;
            end
        end
    end
    
    EI_max = max([EI{:}]);
    N_d_ER_max = max([N_d_ER{:}]);
    
    for i = 1:length(globalVar.channame_BR(gray_idx))
        EI_index{i,1} = EI{i,1}./EI_max;
    end
    
    for i = 1:length(globalVar.channame_BR(gray_idx))
        N_d_ER_index{i,1} = N_d_ER{i,1}./N_d_ER_max;
    end
    
    
    electrodes_output = globalVar.channame_BR(gray_idx)';
    EI_output = cell2mat(EI_index);
    
    T_output  = table(electrodes_output,EI_output);
    
    writetable(T_output,[dirs.original_data filesep sbj_name filesep 'raw_EI_' sbj_name,'_',bn])
    
    
    
    
end


